package Locale::CLDR::Transformations::Bgn::Dv::Dv_latn;
# This file auto generated from Data/common/transforms/Maldivian-Latin-BGN.xml
#	on Thu  8 Mar  9:38:12 am GMT

use strict;
use warnings;
use version;

our $VERSION = version->declare('v0.32.0');

use v5.10.1;
use mro 'c3';
use utf8;
use if $^V ge v5.12.0, feature => 'unicode_strings';
use Types::Standard qw( Str Int HashRef ArrayRef CodeRef RegexpRef );
use Moo;

BEGIN {
	die "Transliteration requires Perl 5.18 or above"
		unless $^V ge v5.18.0;
}

no warnings 'experimental::regex_sets';
has 'transforms' => (
	is => 'ro',
	isa => ArrayRef,
	init_arg => undef,
	default => sub { [
		qr/(?^umi:\G(?:[\p{block=thaana}]|[،؛؟٪٫٬]|[ﷲ]))/,
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(NFD),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްހ),
					result  => q(hh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ހ),
					result  => q(h),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([ް [ަ-ޯ]]),
					replace => q([އށ] ްނ),
					result  => q(nn),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްނ),
					result  => q(nn\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([ް [ަ-ޯ]]),
					replace => q(ނ),
					result  => q(n),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ނ),
					result  => q(n\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްރ),
					result  => q(rr),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ރ),
					result  => q(r),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްބ),
					result  => q(bb),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ބ),
					result  => q(b),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޅ),
					result  => q(hlh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޅ),
					result  => q(lh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްކ),
					result  => q(kk),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ކ),
					result  => q(k),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްވ),
					result  => q(vv),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ވ),
					result  => q(v),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްމ),
					result  => q(mm),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(މ),
					result  => q(m),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްފ),
					result  => q(ff),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ފ),
					result  => q(f),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްދ),
					result  => q(hdh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ދ),
					result  => q(dh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްތް),
					result  => q(hiy),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްތ),
					result  => q(hth),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ިތް),
					result  => q(iy),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ތް),
					result  => q(iy),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ތ),
					result  => q(th),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްލ),
					result  => q(ll),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ލ),
					result  => q(l),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްގ),
					result  => q(gg),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ގ),
					result  => q(g),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޏ),
					result  => q(hgn),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޏ),
					result  => q(gn),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްސ),
					result  => q(ss),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ސ),
					result  => q(s),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޑ),
					result  => q(dd),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޑ),
					result  => q(d),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޒ),
					result  => q(zz),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޒ),
					result  => q(z),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޓ),
					result  => q(tt),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޓ),
					result  => q(t),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޔ),
					result  => q(yy),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޔ),
					result  => q(y),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޕ),
					result  => q(pp),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޕ),
					result  => q(p),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޖ),
					result  => q(jj),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޖ),
					result  => q(j),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޗ),
					result  => q(hch),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޗ),
					result  => q(ch),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޞ),
					result  => q(şş),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޞ),
					result  => q(ş),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޝ),
					result  => q(hsh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޝ),
					result  => q(sh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޜ),
					result  => q(zz),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޜ),
					result  => q(z),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޚ),
					result  => q(hkh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޚ),
					result  => q(kh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޙ),
					result  => q(ḩḩ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޙ),
					result  => q(ḩ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޛ),
					result  => q(hdh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޛ),
					result  => q(dh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޘ),
					result  => q(hth),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޘ),
					result  => q(th),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޥ),
					result  => q(ww),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޥ),
					result  => q(w),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޤ),
					result  => q(qq),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޤ),
					result  => q(q),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޣ),
					result  => q(hgh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޣ),
					result  => q(gh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޢ),
					result  => q(\\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޢ),
					result  => q(\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޡ),
					result  => q(z̧z̧),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޡ),
					result  => q(z̧),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޠ),
					result  => q(ţţ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޠ),
					result  => q(ţ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޟ),
					result  => q(ḑḑ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޟ),
					result  => q(ḑ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްޱ),
					result  => q(n̲n̲),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޱ),
					result  => q(n̲),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([^ \p{L} \p{M} \p{N}]),
					replace => q([އށ] ް),
					result  => q(h),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ްށ),
					result  => q(hsh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ށ),
					result  => q(sh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q([އށ] ް),
					result  => q(),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ް),
					result  => q(),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(އ),
					result  => q(),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(([ަ-ޯ])ﷲ),
					result  => q(),
					revisit => 6,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ﷲ),
					result  => q(allāh),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ަ),
					result  => q(a),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ާ),
					result  => q(aa),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ެ),
					result  => q(e),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޭ),
					result  => q(ey),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ި),
					result  => q(i),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ީ),
					result  => q(ee),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޮ),
					result  => q(o),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޯ),
					result  => q(oa),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ު),
					result  => q(u),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ޫ),
					result  => q(oo),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(،),
					result  => q(\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(؛),
					result  => q(\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(؟),
					result  => q(\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(٪),
					result  => q(\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(٫),
					result  => q(\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(٬),
					result  => q(\'),
					revisit => 0,
				},
			]
		},
	] },
);

no Moo;

1;

# vim: tabstop=4
