package Locale::CLDR::Transformations::Any::Zh_latn_pinyin::Ru;
# This file auto generated from Data/common/transforms/zh_Latn_PINYIN-ru.xml
#	on Thu  8 Mar  9:38:16 am GMT

use strict;
use warnings;
use version;

our $VERSION = version->declare('v0.32.0');

use v5.10.1;
use mro 'c3';
use utf8;
use if $^V ge v5.12.0, feature => 'unicode_strings';
use Types::Standard qw( Str Int HashRef ArrayRef CodeRef RegexpRef );
use Moo;

BEGIN {
	die "Transliteration requires Perl 5.18 or above"
		unless $^V ge v5.18.0;
}

no warnings 'experimental::regex_sets';
has 'transforms' => (
	is => 'ro',
	isa => ArrayRef,
	init_arg => undef,
	default => sub { [
		qr/(?^um:\G.)/,
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(NFD),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q([̄́̌̀̆]),
					result  => q(),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(NFC),
				},
				{
					from => q(Any),
					to => q(Null),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q([aeou]),
					replace => q(ng),
					result  => q(n\'g),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ng),
					result  => q(ng\'),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aeiouü]),
					replace => q(n),
					result  => q(\'n),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(n),
					result  => q(n\'),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(Null),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q(Ai),
					result  => q(Ай),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(A),
					result  => q(А),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(B),
					result  => q(Б),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Ch),
					result  => q(Ч),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Ci),
					result  => q(Цы),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(C),
					result  => q(Ц),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(D),
					result  => q(Д),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(E),
					result  => q(Э),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(F),
					result  => q(Ф),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(G),
					result  => q(Г),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(H),
					result  => q(Х),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Ju),
					result  => q(Цз),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(J),
					result  => q(Цз),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(K),
					result  => q(К),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(L),
					result  => q(Л),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(M),
					result  => q(М),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(N),
					result  => q(Н),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(O),
					result  => q(О),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(P),
					result  => q(П),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Qu),
					result  => q(Ц),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Q),
					result  => q(Ц),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(R),
					result  => q(Ж),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Sh),
					result  => q(Ш),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Si),
					result  => q(Сы),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(S),
					result  => q(С),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(T),
					result  => q(Т),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Wu),
					result  => q(У),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(W),
					result  => q(В),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Xu),
					result  => q(С),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(X),
					result  => q(С),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Yai),
					result  => q(Яй),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Ya),
					result  => q(Я),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Ye),
					result  => q(Е),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Yi),
					result  => q(И),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(You),
					result  => q(Ю),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(ng),
					replace => q(Yo),
					result  => q(Ю),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Yo),
					result  => q(Ё),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Yu),
					result  => q(Ю),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Zh),
					result  => q(Чж),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Zi),
					result  => q(Цзы),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(Z),
					result  => q(Цз),
					revisit => 0,
				},
				{
					before  => q([$]),
					after   => q(),
					replace => q(n),
					result  => q(н),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(\'n),
					result  => q(н),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(\'),
					result  => q(),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ai),
					result  => q(ай),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(a),
					result  => q(а),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(b),
					result  => q(б),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ch),
					result  => q(ч),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ci),
					result  => q(цы),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(c),
					result  => q(ц),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(d),
					result  => q(д),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ei),
					result  => q(эй),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(e),
					result  => q(э),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(f),
					result  => q(ф),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(g),
					result  => q(г),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(h),
					result  => q(х),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ia),
					result  => q(я),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ie),
					result  => q(е),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(ng),
					replace => q(io),
					result  => q(ю),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(iu),
					result  => q(ю),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(i),
					result  => q(и),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ju),
					result  => q(цз),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(j),
					result  => q(цз),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(k),
					result  => q(к),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(l),
					result  => q(л),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(m),
					result  => q(м),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ng),
					result  => q(н),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(n),
					result  => q(нь),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(ng),
					replace => q(o),
					result  => q(у),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(o),
					result  => q(о),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(p),
					result  => q(п),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(qu),
					result  => q(ц),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(q),
					result  => q(ц),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([^aeiou]),
					replace => q(r),
					result  => q(р),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(r),
					result  => q(ж),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(sh),
					result  => q(ш),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(si),
					result  => q(сы),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(s),
					result  => q(с),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(t),
					result  => q(т),
					revisit => 0,
				},
				{
					before  => q([Хх]),
					after   => q(),
					replace => q(ui),
					result  => q(уэй),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ui),
					result  => q(уй),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(uo),
					result  => q(о),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(u),
					result  => q(у),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ü),
					result  => q(ю),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ve),
					result  => q(э),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([an]),
					replace => q(v),
					result  => q(),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(v),
					result  => q(й),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(wu),
					result  => q(у),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(w),
					result  => q(в),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(xu),
					result  => q(с),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(x),
					result  => q(с),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(yai),
					result  => q(яй),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ya),
					result  => q(я),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ye),
					result  => q(е),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(yi),
					result  => q(и),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(you),
					result  => q(ю),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(ng),
					replace => q(yo),
					result  => q(ю),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(yo),
					result  => q(ё),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(yu),
					result  => q(ю),
					revisit => 1,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(zh),
					result  => q(чж),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(zi),
					result  => q(цзы),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(z),
					result  => q(цз),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(NFC),
				},
			]
		},
	] },
);

no Moo;

1;

# vim: tabstop=4
