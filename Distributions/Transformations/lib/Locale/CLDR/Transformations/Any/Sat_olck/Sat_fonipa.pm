package Locale::CLDR::Transformations::Any::Sat_olck::Sat_fonipa;
# This file auto generated from Data/common/transforms/sat_Olck-sat_FONIPA.xml
#	on Thu  8 Mar  9:38:15 am GMT

use strict;
use warnings;
use version;

our $VERSION = version->declare('v0.32.0');

use v5.10.1;
use mro 'c3';
use utf8;
use if $^V ge v5.12.0, feature => 'unicode_strings';
use Types::Standard qw( Str Int HashRef ArrayRef CodeRef RegexpRef );
use Moo;

BEGIN {
	die "Transliteration requires Perl 5.18 or above"
		unless $^V ge v5.18.0;
}

no warnings 'experimental::regex_sets';
has 'transforms' => (
	is => 'ro',
	isa => ArrayRef,
	init_arg => undef,
	default => sub { [
		qr/(?^um:\G.)/,
		{
			type => 'transform',
			data => [
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q(ᱹᱸ),
					result  => q(ᱺ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱸᱹ),
					result  => q(ᱺ),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(null),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q(ᱻᱹ),
					result  => q(ᱹᱻ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱻᱸ),
					result  => q(ᱸᱻ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱻᱺ),
					result  => q(ᱺᱻ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱼᱹ),
					result  => q(ᱹᱼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱼᱸ),
					result  => q(ᱸᱼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱼᱺ),
					result  => q(ᱺᱼ),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(null),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q([ᱚᱟᱤᱩᱮᱳᱶᱢᱝᱞᱱ][ᱹᱸᱺ]*),
					after   => q(),
					replace => q(ᱼ),
					result  => q(ᱻ),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(null),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱹᱻ),
					result  => q(ɔː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱹ),
					result  => q(ɔ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱸᱻ),
					result  => q(ɔ̃ː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱸ),
					result  => q(ɔ̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱺᱻ),
					result  => q(ɔ̃ː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱺ),
					result  => q(ɔ̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚᱻ),
					result  => q(ɔː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱚ),
					result  => q(ɔ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱛᱼ),
					result  => q(t),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱛᱷ),
					result  => q(tʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱛᱽ),
					result  => q(d),
					revisit => 0,
				},
				{
					before  => q([\p{L} \p{M}]),
					after   => q(),
					replace => q(ᱛ),
					result  => q(d),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱛ),
					result  => q(t),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱜᱼ),
					result  => q(kʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱜᱷ),
					result  => q(kʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱜᱽ),
					result  => q(ɡ),
					revisit => 0,
				},
				{
					before  => q([\p{L} \p{M}]),
					after   => q(),
					replace => q(ᱜ),
					result  => q(ɡ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱜ),
					result  => q(kʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱝᱻ),
					result  => q(ŋː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱝ),
					result  => q(ŋ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱞᱻ),
					result  => q(lː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱞ),
					result  => q(l),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱹᱻ),
					result  => q(əː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱹ),
					result  => q(ə),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱸᱻ),
					result  => q(ãː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱸ),
					result  => q(ã),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱺᱻ),
					result  => q(ə̃ː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱺ),
					result  => q(ə̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟᱻ),
					result  => q(aː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱟ),
					result  => q(a),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱠᱼ),
					result  => q(k),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱠᱷ),
					result  => q(kʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱠᱽ),
					result  => q(ɡ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱠ),
					result  => q(k),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱡᱼ),
					result  => q(cʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱡᱷ),
					result  => q(cʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱡᱽ),
					result  => q(d͡ʒ),
					revisit => 0,
				},
				{
					before  => q([\p{L} \p{M}]),
					after   => q(),
					replace => q(ᱡ),
					result  => q(d͡ʒ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱡ),
					result  => q(cʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱢᱻ),
					result  => q(mː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱢ),
					result  => q(m),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱣᱸ),
					result  => q(w̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱣ),
					result  => q(w),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱹᱻ),
					result  => q(iː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱹ),
					result  => q(i),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱸᱻ),
					result  => q(ĩː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱸ),
					result  => q(ĩ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱺᱻ),
					result  => q(ĩː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱺ),
					result  => q(ĩ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤᱻ),
					result  => q(iː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱤ),
					result  => q(i),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱥᱻ),
					result  => q(sː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱥ),
					result  => q(s),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱦ),
					result  => q(h),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱧᱻ),
					result  => q(ɲː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱧ),
					result  => q(ɲ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱨᱻ),
					result  => q(r),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱨ),
					result  => q(r),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱹᱻ),
					result  => q(uː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱹ),
					result  => q(u),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱸᱻ),
					result  => q(ũː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱸ),
					result  => q(ũ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱺᱻ),
					result  => q(ũː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱺ),
					result  => q(ũ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩᱻ),
					result  => q(uː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱩ),
					result  => q(u),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱪᱼ),
					result  => q(c),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱪᱷ),
					result  => q(cʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱪᱽ),
					result  => q(d͡ʒ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱪ),
					result  => q(c),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱫᱼ),
					result  => q(tʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱫᱷ),
					result  => q(tʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱫᱽ),
					result  => q(d),
					revisit => 0,
				},
				{
					before  => q([\p{L} \p{M}]),
					after   => q(),
					replace => q(ᱫ),
					result  => q(d),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱫ),
					result  => q(tʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱬᱻ),
					result  => q(ɳː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱬ),
					result  => q(ɳ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱭ),
					result  => q(h),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱹᱻ),
					result  => q(ɛː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱹ),
					result  => q(ɛ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱺᱻ),
					result  => q(ɛ̃ː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱺ),
					result  => q(ɛ̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱸᱻ),
					result  => q(ẽː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱸ),
					result  => q(ẽ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮᱻ),
					result  => q(eː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱮ),
					result  => q(e),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱯᱼ),
					result  => q(p),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱯᱷ),
					result  => q(pʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱯᱽ),
					result  => q(b),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱯ),
					result  => q(p),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱰᱷ),
					result  => q(ɖʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱰ),
					result  => q(ɖ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱱᱻ),
					result  => q(nː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱱ),
					result  => q(n),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱲᱻ),
					result  => q(ɽ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱲ),
					result  => q(ɽ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱳᱸᱻ),
					result  => q(õː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱳᱸ),
					result  => q(õ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱳᱻ),
					result  => q(oː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱳ),
					result  => q(o),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱴᱼ),
					result  => q(ʈ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱴᱷ),
					result  => q(ʈʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱴᱽ),
					result  => q(ɖ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱴ),
					result  => q(ʈ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱵᱼ),
					result  => q(pʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱵᱷ),
					result  => q(bʰ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱵᱽ),
					result  => q(b),
					revisit => 0,
				},
				{
					before  => q([\p{L} \p{M}]),
					after   => q(),
					replace => q(ᱵ),
					result  => q(b),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱵ),
					result  => q(pʼ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱶᱻ),
					result  => q(w̃ː),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ᱶ),
					result  => q(w̃),
					revisit => 0,
				},
			]
		},
	] },
);

no Moo;

1;

# vim: tabstop=4
