package Locale::CLDR::Transformations::Any::Pl::Pl_fonipa;
# This file auto generated from Data/common/transforms/pl-pl_FONIPA.xml
#	on Thu  8 Mar  9:38:15 am GMT

use strict;
use warnings;
use version;

our $VERSION = version->declare('v0.32.0');

use v5.10.1;
use mro 'c3';
use utf8;
use if $^V ge v5.12.0, feature => 'unicode_strings';
use Types::Standard qw( Str Int HashRef ArrayRef CodeRef RegexpRef );
use Moo;

BEGIN {
	die "Transliteration requires Perl 5.18 or above"
		unless $^V ge v5.18.0;
}

no warnings 'experimental::regex_sets';
has 'transforms' => (
	is => 'ro',
	isa => ArrayRef,
	init_arg => undef,
	default => sub { [
		qr/(?^um:\G.)/,
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(NFC),
				},
				{
					from => q(Any),
					to => q(Lower),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(i),
					replace => q(ch),
					result  => q(ç),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ch),
					result  => q(x),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aąeęioóuy]),
					replace => q(ci),
					result  => q(t\u0361ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ci),
					result  => q(t\u0361ɕi),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(cz),
					result  => q(t\u0361ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aąeęioóuy]),
					replace => q(dzi),
					result  => q(d\u0361ʑ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(dzi),
					result  => q(d\u0361ʑi),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(dz),
					result  => q(t\u0361s),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(dz),
					result  => q(d\u0361z),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(dź),
					result  => q(t\u0361ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(dź),
					result  => q(d\u0361ʑ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(dż),
					result  => q(t\u0361ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(dż),
					result  => q(d\u0361ʐ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(kw),
					result  => q(kf),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(krw),
					result  => q(krf),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aąeęioóuy]),
					replace => q(ni),
					result  => q(ɲ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ni),
					result  => q(ɲi),
					revisit => 0,
				},
				{
					before  => q([cfhkpst]),
					after   => q(),
					replace => q(rz),
					result  => q(ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(rz),
					result  => q(ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(rz),
					result  => q(ʐ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(sz),
					result  => q(ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(trw),
					result  => q(trf),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(tw),
					result  => q(tf),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aąeęioóuy]),
					replace => q(zi),
					result  => q(ʑ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(zi),
					result  => q(ʑi),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(a),
					result  => q(a),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([bp]),
					replace => q(ą),
					result  => q(ɔm),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([kg]),
					replace => q(ą),
					result  => q(ɔŋ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cdt]),
					replace => q(ą),
					result  => q(ɔn),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ą),
					result  => q(ɔ̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(b),
					result  => q(p),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(b),
					result  => q(b),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(c),
					result  => q(t\u0361s),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ć),
					result  => q(t\u0361ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(d),
					result  => q(t),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(d),
					result  => q(d),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(e),
					result  => q(ɛ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([bp]),
					replace => q(ę),
					result  => q(ɛm),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([dt]),
					replace => q(ę),
					result  => q(ɛn),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([gk]),
					replace => q(ę),
					result  => q(ɛŋ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ę),
					result  => q(ɛ̃),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(f),
					result  => q(f),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(g),
					result  => q(k),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(g),
					result  => q(ɡ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(i),
					replace => q(h),
					result  => q(ç),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(h),
					result  => q(x),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aąeęioóuy]),
					replace => q(i),
					result  => q(ʲ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(i),
					result  => q(i),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(j),
					result  => q(j),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([bdzż]),
					replace => q(k),
					result  => q(ɡ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(k),
					result  => q(k),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(i),
					replace => q(l),
					result  => q(ʎ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(l),
					result  => q(l),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ł),
					result  => q(w),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(m),
					result  => q(m),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(n),
					result  => q(n),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ń),
					result  => q(ɲ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(o),
					result  => q(ɔ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ó),
					result  => q(u),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(r),
					result  => q(r),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([aąeęioóuy]),
					replace => q(si),
					result  => q(ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(si),
					result  => q(ɕi),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(s),
					result  => q(s),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ś),
					result  => q(ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(t),
					result  => q(t),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(u),
					result  => q(u),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(w),
					result  => q(f),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(w),
					result  => q(v),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(y),
					result  => q(ɨ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(ź),
					result  => q(ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ź),
					result  => q(ʑ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([cfhkpst]),
					replace => q(ż),
					result  => q(ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ż),
					result  => q(ʐ),
					revisit => 0,
				},
			],
		},
		{
			type => 'transform',
			data => [
				{
					from => q(Any),
					to => q(Null),
				},
			],
		},
		{
			type => 'conversion',
			data => [
				{
					before  => q(),
					after   => q(),
					replace => q(tʐ),
					result  => q(tʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(pʐ),
					result  => q(pʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(xʐ),
					result  => q(xʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q(),
					replace => q(ʐt͡ʂ),
					result  => q(ʂt͡ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(b),
					result  => q(p),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(d͡z),
					result  => q(t\u0361s),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(d),
					result  => q(t),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(ɡ),
					result  => q(k),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(v),
					result  => q(f),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(ʐ),
					result  => q(ʂ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(ʑ),
					result  => q(ɕ),
					revisit => 0,
				},
				{
					before  => q(),
					after   => q([$]),
					replace => q(z),
					result  => q(s),
					revisit => 0,
				},
			]
		},
	] },
);

no Moo;

1;

# vim: tabstop=4
